/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cl.duoc.pty.feriavirtualdesktop.grafica;

import cl.duoc.pty.feriavirtualdesktop.entidades.RespuestaUsuario;
import cl.duoc.pty.feriavirtualdesktop.entidades.RespuestaUsuarioListar;
import cl.duoc.pty.feriavirtualdesktop.entidades.TMUsuario;
import cl.duoc.pty.feriavirtualdesktop.entidades.Usuario;
import cl.duoc.pty.feriavirtualdesktop.negocio.UsuarioController;
import cl.duoc.pty.feriavirtualdesktop.utils.perfilUsuario;
import cl.duoc.pty.feriavirtualdesktop.utils.FormatoString;
import cl.duoc.pty.feriavirtualdesktop.utils.ValidacionRut;
import java.awt.Color;
import java.awt.Event;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.TableModel;
import java.awt.event.*;

/**
 *
 * @author s1mu2
 */
public class VistaGestionUsuarios extends javax.swing.JPanel implements ActionListener {

    /**
     * Creates new form VistaGestionUsuarioss
     */
    private RespuestaUsuarioListar listaUsuario = new RespuestaUsuarioListar();

    private ValidacionRut valida = new ValidacionRut();

    public VistaGestionUsuarios() {
        initComponents();
        inicializarTabla();
        setearBotones();
        listenerUsuario();
    }

    @Override
    public boolean action(Event evt, Object what) {
        return super.action(evt, what); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbtGrupoEstado = new javax.swing.ButtonGroup();
        PnlGestionUsuarios = new javax.swing.JPanel();
        pnlInputsGestionUsuario = new javax.swing.JPanel();
        llIdUsuario = new javax.swing.JLabel();
        txtIdUsuario = new javax.swing.JTextField();
        lblRutUsuario = new javax.swing.JLabel();
        lblNombreUsuario = new javax.swing.JLabel();
        lblApellidoUsuario = new javax.swing.JLabel();
        txtRut = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        lblTipoUsuario = new javax.swing.JLabel();
        lblEstadoUsuario = new javax.swing.JLabel();
        lblDireccionUsuario = new javax.swing.JLabel();
        txtDireccionUsuario = new javax.swing.JTextField();
        lblEmailUsuario = new javax.swing.JLabel();
        lblClaveUsuario = new javax.swing.JLabel();
        lblTelefonoUsuario = new javax.swing.JLabel();
        txtTelefonoUsuario = new javax.swing.JTextField();
        lblFechaCreacion = new javax.swing.JLabel();
        txtTipoUsuario = new javax.swing.JTextField();
        txtfechaCreacion = new javax.swing.JTextField();
        rbtVigente = new javax.swing.JRadioButton();
        rbtNoVigente = new javax.swing.JRadioButton();
        btnBuscarRut = new javax.swing.JButton();
        btnBuscarApellido = new javax.swing.JButton();
        btnBuscarNombre = new javax.swing.JButton();
        txtfechaModificacion = new javax.swing.JTextField();
        txtActivo = new javax.swing.JTextField();
        lblActivoUsuario = new javax.swing.JLabel();
        lblCambioClave = new javax.swing.JLabel();
        txtCambioClave = new javax.swing.JTextField();
        txtEmailUsuario = new javax.swing.JTextField();
        pnlbtnUsuarios = new javax.swing.JPanel();
        btnLimpiar = new javax.swing.JButton();
        btnActualizarUsuario = new javax.swing.JButton();
        pnlGridUsuarios = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGestionUsuarios = new javax.swing.JTable();

        PnlGestionUsuarios.setBackground(new java.awt.Color(255, 255, 255));
        PnlGestionUsuarios.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gestión de Usuarios", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N
        PnlGestionUsuarios.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PnlGestionUsuarios.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        PnlGestionUsuarios.setPreferredSize(new java.awt.Dimension(1100, 640));

        pnlInputsGestionUsuario.setBackground(new java.awt.Color(255, 255, 255));

        llIdUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        llIdUsuario.setText("Código Usuario");

        txtIdUsuario.setEditable(false);
        txtIdUsuario.setBackground(new java.awt.Color(204, 204, 204));
        txtIdUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblRutUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblRutUsuario.setText("Rut");

        lblNombreUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNombreUsuario.setText("Nombre");

        lblApellidoUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblApellidoUsuario.setText("Apellido");

        txtRut.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtRut.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                busquedaRut(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRutFocusLost(evt);
            }
        });
        txtRut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutActionPerformed(evt);
            }
        });

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtApellido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblTipoUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTipoUsuario.setText("Tipo de Usuario");

        lblEstadoUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblEstadoUsuario.setText("Estado");

        lblDireccionUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDireccionUsuario.setText("Dirección");

        txtDireccionUsuario.setEditable(false);
        txtDireccionUsuario.setBackground(new java.awt.Color(204, 204, 204));
        txtDireccionUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblEmailUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblEmailUsuario.setText("Email");

        lblClaveUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblClaveUsuario.setText("Modificación");

        lblTelefonoUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTelefonoUsuario.setText("Teléfono");

        txtTelefonoUsuario.setEditable(false);
        txtTelefonoUsuario.setBackground(new java.awt.Color(204, 204, 204));
        txtTelefonoUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblFechaCreacion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFechaCreacion.setText("Creación");

        txtTipoUsuario.setEditable(false);
        txtTipoUsuario.setBackground(new java.awt.Color(204, 204, 204));
        txtTipoUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtfechaCreacion.setEditable(false);
        txtfechaCreacion.setBackground(new java.awt.Color(204, 204, 204));
        txtfechaCreacion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        rbtGrupoEstado.add(rbtVigente);
        rbtVigente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbtVigente.setText("Vigente");

        rbtGrupoEstado.add(rbtNoVigente);
        rbtNoVigente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbtNoVigente.setText("No Vigente");

        btnBuscarRut.setBackground(new java.awt.Color(253, 187, 52));
        btnBuscarRut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBuscarRut.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarRut.setText("Buscar");
        btnBuscarRut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarRutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarRutMouseExited(evt);
            }
        });
        btnBuscarRut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarRutActionPerformed(evt);
            }
        });

        btnBuscarApellido.setBackground(new java.awt.Color(253, 187, 52));
        btnBuscarApellido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBuscarApellido.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarApellido.setText("Buscar");
        btnBuscarApellido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarApellidoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarApellidoMouseExited(evt);
            }
        });
        btnBuscarApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarApellidoActionPerformed(evt);
            }
        });

        btnBuscarNombre.setBackground(new java.awt.Color(253, 187, 52));
        btnBuscarNombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBuscarNombre.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarNombre.setText("Buscar");
        btnBuscarNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarNombreMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarNombreMouseExited(evt);
            }
        });
        btnBuscarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarNombreActionPerformed(evt);
            }
        });

        txtfechaModificacion.setEditable(false);
        txtfechaModificacion.setBackground(new java.awt.Color(204, 204, 204));
        txtfechaModificacion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtActivo.setEditable(false);
        txtActivo.setBackground(new java.awt.Color(204, 204, 204));
        txtActivo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblActivoUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblActivoUsuario.setText("Activo");

        lblCambioClave.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCambioClave.setText("Debe cambiar clave");

        txtCambioClave.setEditable(false);
        txtCambioClave.setBackground(new java.awt.Color(204, 204, 204));
        txtCambioClave.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtEmailUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout pnlInputsGestionUsuarioLayout = new javax.swing.GroupLayout(pnlInputsGestionUsuario);
        pnlInputsGestionUsuario.setLayout(pnlInputsGestionUsuarioLayout);
        pnlInputsGestionUsuarioLayout.setHorizontalGroup(
            pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputsGestionUsuarioLayout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblApellidoUsuario)
                    .addComponent(llIdUsuario)
                    .addComponent(lblRutUsuario)
                    .addComponent(lblNombreUsuario)
                    .addComponent(txtIdUsuario)
                    .addComponent(txtRut)
                    .addComponent(txtNombre)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarRut)
                    .addComponent(btnBuscarNombre)
                    .addComponent(btnBuscarApellido))
                .addGap(129, 129, 129)
                .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputsGestionUsuarioLayout.createSequentialGroup()
                        .addComponent(rbtVigente)
                        .addGap(18, 18, 18)
                        .addComponent(rbtNoVigente))
                    .addComponent(txtTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtEmailUsuario, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTipoUsuario)
                    .addComponent(lblActivoUsuario)
                    .addComponent(lblEstadoUsuario)
                    .addComponent(lblEmailUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 241, Short.MAX_VALUE)
                .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputsGestionUsuarioLayout.createSequentialGroup()
                        .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFechaCreacion)
                            .addComponent(txtfechaCreacion, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfechaModificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblClaveUsuario)))
                    .addComponent(txtDireccionUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtCambioClave, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTelefonoUsuario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblCambioClave)
                    .addComponent(lblTelefonoUsuario)
                    .addComponent(lblDireccionUsuario))
                .addGap(100, 100, 100))
        );
        pnlInputsGestionUsuarioLayout.setVerticalGroup(
            pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInputsGestionUsuarioLayout.createSequentialGroup()
                .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(llIdUsuario)
                    .addComponent(lblTipoUsuario)
                    .addComponent(lblFechaCreacion)
                    .addComponent(lblClaveUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfechaCreacion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfechaModificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRutUsuario)
                    .addComponent(lblActivoUsuario)
                    .addComponent(lblCambioClave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRut, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarRut, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCambioClave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreUsuario)
                    .addComponent(lblEstadoUsuario)
                    .addComponent(lblTelefonoUsuario))
                .addGap(1, 1, 1)
                .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtNoVigente)
                    .addComponent(rbtVigente)
                    .addComponent(txtTelefonoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellidoUsuario)
                    .addComponent(lblEmailUsuario)
                    .addComponent(lblDireccionUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputsGestionUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDireccionUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlbtnUsuarios.setBackground(new java.awt.Color(255, 255, 255));

        btnLimpiar.setBackground(new java.awt.Color(253, 187, 72));
        btnLimpiar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseExited(evt);
            }
        });
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnActualizarUsuario.setBackground(new java.awt.Color(253, 187, 72));
        btnActualizarUsuario.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnActualizarUsuario.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizarUsuario.setText("Guardar");
        btnActualizarUsuario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnActualizarUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnActualizarUsuarioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnActualizarUsuarioMouseExited(evt);
            }
        });
        btnActualizarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlbtnUsuariosLayout = new javax.swing.GroupLayout(pnlbtnUsuarios);
        pnlbtnUsuarios.setLayout(pnlbtnUsuariosLayout);
        pnlbtnUsuariosLayout.setHorizontalGroup(
            pnlbtnUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlbtnUsuariosLayout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(225, 225, 225)
                .addComponent(btnActualizarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlbtnUsuariosLayout.setVerticalGroup(
            pnlbtnUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlbtnUsuariosLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(pnlbtnUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlGridUsuarios.setBackground(new java.awt.Color(255, 255, 255));

        tblGestionUsuarios.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblGestionUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblGestionUsuarios.setGridColor(new java.awt.Color(43, 172, 192));
        tblGestionUsuarios.getTableHeader().setResizingAllowed(false);
        tblGestionUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGestionUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblGestionUsuarios);

        javax.swing.GroupLayout pnlGridUsuariosLayout = new javax.swing.GroupLayout(pnlGridUsuarios);
        pnlGridUsuarios.setLayout(pnlGridUsuariosLayout);
        pnlGridUsuariosLayout.setHorizontalGroup(
            pnlGridUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        pnlGridUsuariosLayout.setVerticalGroup(
            pnlGridUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGridUsuariosLayout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout PnlGestionUsuariosLayout = new javax.swing.GroupLayout(PnlGestionUsuarios);
        PnlGestionUsuarios.setLayout(PnlGestionUsuariosLayout);
        PnlGestionUsuariosLayout.setHorizontalGroup(
            PnlGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlGestionUsuariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlGridUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlbtnUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInputsGestionUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        PnlGestionUsuariosLayout.setVerticalGroup(
            PnlGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnlGestionUsuariosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInputsGestionUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlbtnUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlGridUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PnlGestionUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 1738, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PnlGestionUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblGestionUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGestionUsuariosMouseClicked
        btnActualizarUsuario.setEnabled(false);
        btnBuscarRut.setEnabled(true);
        btnBuscarNombre.setEnabled(true);
        btnBuscarApellido.setEnabled(true);

        int i = tblGestionUsuarios.getSelectedRow();
        TableModel model = tblGestionUsuarios.getModel();

        txtIdUsuario.setText(model.getValueAt(i, 0).toString());

        String rut = model.getValueAt(i, 1).toString();
        String rutFormateado = valida.FormatearRUT(rut);
        txtRut.setText(rutFormateado);

        txtNombre.setText(model.getValueAt(i, 2).toString());
        txtApellido.setText(model.getValueAt(i, 3).toString());
        txtEmailUsuario.setText(model.getValueAt(i, 4).toString());

        if (model.getValueAt(i, 5) == "Vigente") {
            rbtVigente.setSelected(true);
        } else {
            rbtNoVigente.setSelected(true);
        }
        txtActivo.setText(model.getValueAt(i, 6).toString());
        txtDireccionUsuario.setText(model.getValueAt(i, 7).toString());
        if ((Boolean.parseBoolean(model.getValueAt(i, 8).toString())) == true) {
            txtCambioClave.setText("Si");
        } else {
            txtCambioClave.setText("No");
        }
        txtfechaCreacion.setText(model.getValueAt(i, 9).toString());
        txtfechaModificacion.setText(model.getValueAt(i, 10).toString());

        txtTipoUsuario.setText(model.getValueAt(i, 11).toString());
        txtTelefonoUsuario.setText(model.getValueAt(i, 12).toString());
    }//GEN-LAST:event_tblGestionUsuariosMouseClicked

    private void btnActualizarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarUsuarioActionPerformed
        if (txtTelefonoUsuario.getText().isEmpty()
                || txtDireccionUsuario.getText().isEmpty()
                || txtEmailUsuario.getText().isEmpty()
                || txtActivo.getText().isEmpty()
                || rbtNoVigente.getText().isEmpty()
                || rbtVigente.getText().isEmpty()) {
            showMessageDialog(null, "Hay campos vacíos", "Información", JOptionPane.WARNING_MESSAGE);
        } else {
            if (FormatoString.validaEmail(txtEmailUsuario.getText())) {
                actualizarUsuario();
            } else {
                showMessageDialog(null, "Introduzca una dirección de correo electrónico válida", "Información", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnActualizarUsuarioActionPerformed

    private void txtRutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutActionPerformed
        buscarRut();
    }//GEN-LAST:event_txtRutActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarFormulario();
        inicializarTabla();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarRutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarRutActionPerformed
        buscarRut();
    }//GEN-LAST:event_btnBuscarRutActionPerformed

    private void btnBuscarApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarApellidoActionPerformed
        buscarApellido();
    }//GEN-LAST:event_btnBuscarApellidoActionPerformed

    private void btnBuscarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarNombreActionPerformed
        buscarNombre();
    }//GEN-LAST:event_btnBuscarNombreActionPerformed

    private void txtRutFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRutFocusLost
        if (txtRut.getText() != null && !txtRut.getText().isEmpty()) {
            txtRut.setText(ValidacionRut.FormatearRUT(txtRut.getText()));
        }
    }//GEN-LAST:event_txtRutFocusLost

    private void busquedaRut(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_busquedaRut
        limpiarFormulario();
    }//GEN-LAST:event_busquedaRut

    private void btnLimpiarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseEntered
        btnLimpiar.setBackground(new Color(0, 153, 0));
    }//GEN-LAST:event_btnLimpiarMouseEntered

    private void btnActualizarUsuarioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarUsuarioMouseEntered
        btnActualizarUsuario.setBackground(new Color(0, 153, 0));
    }//GEN-LAST:event_btnActualizarUsuarioMouseEntered

    private void btnBuscarRutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarRutMouseEntered
        btnBuscarRut.setBackground(new Color(0, 153, 0));
    }//GEN-LAST:event_btnBuscarRutMouseEntered

    private void btnBuscarNombreMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarNombreMouseEntered
        btnBuscarNombre.setBackground(new Color(0, 153, 0));
    }//GEN-LAST:event_btnBuscarNombreMouseEntered

    private void btnBuscarApellidoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarApellidoMouseEntered
        btnBuscarApellido.setBackground(new Color(0, 153, 0));
    }//GEN-LAST:event_btnBuscarApellidoMouseEntered

    private void btnBuscarRutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarRutMouseExited
        btnBuscarRut.setBackground(new Color(253, 187, 72));
    }//GEN-LAST:event_btnBuscarRutMouseExited

    private void btnBuscarNombreMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarNombreMouseExited
        btnBuscarNombre.setBackground(new Color(253, 187, 72));
    }//GEN-LAST:event_btnBuscarNombreMouseExited

    private void btnBuscarApellidoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarApellidoMouseExited
        btnBuscarApellido.setBackground(new Color(253, 187, 72));
    }//GEN-LAST:event_btnBuscarApellidoMouseExited

    private void btnLimpiarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseExited
        btnLimpiar.setBackground(new Color(253, 187, 72));
    }//GEN-LAST:event_btnLimpiarMouseExited

    private void btnActualizarUsuarioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarUsuarioMouseExited
        btnActualizarUsuario.setBackground(new Color(253, 187, 72));
    }//GEN-LAST:event_btnActualizarUsuarioMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PnlGestionUsuarios;
    private javax.swing.JButton btnActualizarUsuario;
    private javax.swing.JButton btnBuscarApellido;
    private javax.swing.JButton btnBuscarNombre;
    private javax.swing.JButton btnBuscarRut;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblActivoUsuario;
    private javax.swing.JLabel lblApellidoUsuario;
    private javax.swing.JLabel lblCambioClave;
    private javax.swing.JLabel lblClaveUsuario;
    private javax.swing.JLabel lblDireccionUsuario;
    private javax.swing.JLabel lblEmailUsuario;
    private javax.swing.JLabel lblEstadoUsuario;
    private javax.swing.JLabel lblFechaCreacion;
    private javax.swing.JLabel lblNombreUsuario;
    private javax.swing.JLabel lblRutUsuario;
    private javax.swing.JLabel lblTelefonoUsuario;
    private javax.swing.JLabel lblTipoUsuario;
    private javax.swing.JLabel llIdUsuario;
    private javax.swing.JPanel pnlGridUsuarios;
    private javax.swing.JPanel pnlInputsGestionUsuario;
    private javax.swing.JPanel pnlbtnUsuarios;
    private javax.swing.ButtonGroup rbtGrupoEstado;
    private javax.swing.JRadioButton rbtNoVigente;
    private javax.swing.JRadioButton rbtVigente;
    private javax.swing.JTable tblGestionUsuarios;
    private javax.swing.JTextField txtActivo;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCambioClave;
    private javax.swing.JTextField txtDireccionUsuario;
    private javax.swing.JTextField txtEmailUsuario;
    private javax.swing.JTextField txtIdUsuario;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRut;
    private javax.swing.JTextField txtTelefonoUsuario;
    private javax.swing.JTextField txtTipoUsuario;
    private javax.swing.JTextField txtfechaCreacion;
    private javax.swing.JTextField txtfechaModificacion;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * Método para activar los botones
     */
    private void setearBotones() {
        btnActualizarUsuario.setEnabled(false);
        btnLimpiar.setEnabled(true);
        btnBuscarRut.setEnabled(false);
        btnBuscarNombre.setEnabled(false);
        btnBuscarApellido.setEnabled(false);
    }

    /**
     * Método cargar los datos que retorna la API de los usuarios en la grilla
     */
    private void inicializarTabla() {
        listaUsuario = UsuarioController.buscarUsuario(txtIdUsuario.getText());
        TMUsuario modelo;
        modelo = new TMUsuario(listaUsuario.getUsuarios());
        tblGestionUsuarios.setModel(modelo);
    }

    /**
     * Método para limpiar los componentes y cargar nuevamente la tabla en la
     * grilla
     */
    private void limpiarFormulario() {
        rbtGrupoEstado.clearSelection();
        txtApellido.setText(null);
        txtApellido.setText("");
        txtDireccionUsuario.setText(null);
        txtDireccionUsuario.setText("");
        txtEmailUsuario.setText(null);
        txtEmailUsuario.setText("");
        txtIdUsuario.setText(null);
        txtIdUsuario.setText("");
        txtNombre.setText(null);
        txtNombre.setText("");
        txtRut.setText(null);
        txtRut.setText("");
        txtTelefonoUsuario.setText(null);
        txtTelefonoUsuario.setText("");
        txtTipoUsuario.setText(null);
        txtTipoUsuario.setText("");
        txtfechaCreacion.setText(null);
        txtfechaCreacion.setText("");
        txtfechaModificacion.setText(null);
        txtfechaModificacion.setText("");
        setearBotones();
    }

    /**
     * Método Para Buscar el Rut de un Usuario en lista de Usuarios que retorna
     * la API
     */
    private void buscarRut() {
        try {
            if (ValidacionRut.validarRut(txtRut.getText())) {
                TMUsuario modelo;
                String rutGuion = valida.FormatearRUT(txtRut.getText());
                List<Usuario> nuevaListaUsuario = new ArrayList<>();
                Usuario usuario = new Usuario();
                if (rutGuion != null && !rutGuion.isEmpty()) {
                    for (Usuario u : listaUsuario.getUsuarios()) {
                        if (rutGuion.equals(u.getRut())) {
                            nuevaListaUsuario.add(u);
                        }
                    }
                    if (nuevaListaUsuario.isEmpty()) {
                        JOptionPane.showMessageDialog(pnlInputsGestionUsuario, "El usuario ingresado no existe");
                    } else {
                        modelo = new TMUsuario(nuevaListaUsuario);
                        tblGestionUsuarios.setModel(modelo);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(pnlInputsGestionUsuario, "El rut ingresado no es valido");
            }
        } catch (Exception e) {
        }
    }

    /**
     * Método Para Buscar el Apellido de un Usuario en lista de Usuarios que
     * retorna la API
     */
    private void buscarApellido() {
        try {
            if (txtApellido.getText().isEmpty()) {
                showMessageDialog(null, "Debe Ingresar un Apellido", "Información", JOptionPane.WARNING_MESSAGE);
            } else {
                if (FormatoString.SoloLetras(txtApellido.getText())) {
                    TMUsuario modelo;
                    String apellido = txtApellido.getText();
                    List<Usuario> nuevaListaUsuario = new ArrayList<>();
                    Usuario usuario = new Usuario();
                    if (apellido != null && !apellido.isEmpty()) {
                        for (Usuario u : listaUsuario.getUsuarios()) {
                            if (u.getApellido().toLowerCase().contains(apellido.toLowerCase())) {
                                nuevaListaUsuario.add(u);
                            } else {
                            }
                        }
                        if (nuevaListaUsuario.isEmpty()) {
                            JOptionPane.showMessageDialog(pnlInputsGestionUsuario, "El usuario ingresado no existe");
                        } else {
                            modelo = new TMUsuario(nuevaListaUsuario);
                            tblGestionUsuarios.setModel(modelo);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(pnlInputsGestionUsuario, "Datos ingresados inválidos");
                }
            }
        } catch (Exception e) {
        }
    }

    /**
     * Método Para Buscar el Nombre de un Usuario en lista de Usuarios que
     * retorna la API
     */
    private void buscarNombre() {
        try {
            if (txtNombre.getText().isEmpty()) {
                showMessageDialog(null, "Debe Ingresar un Nombre", "Información", JOptionPane.WARNING_MESSAGE);
            } else {
                if (FormatoString.SoloLetras(txtNombre.getText())) {
                    TMUsuario modelo;
                    String nombre = txtNombre.getText();
                    List<Usuario> nuevaListaUsuario = new ArrayList<>();
                    Usuario usuario = new Usuario();
                    if (nombre != null && !nombre.isEmpty()) {
                        for (Usuario u : listaUsuario.getUsuarios()) {
                            if (u.getNombre().toLowerCase().contains(nombre.toLowerCase())) {
                                nuevaListaUsuario.add(u);
                            } else {
                            }
                        }
                        if (nuevaListaUsuario.isEmpty()) {
                            JOptionPane.showMessageDialog(pnlInputsGestionUsuario, "El usuario ingresado no existe");
                        } else {
                            modelo = new TMUsuario(nuevaListaUsuario);
                            tblGestionUsuarios.setModel(modelo);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(pnlInputsGestionUsuario, "Datos ingresados inválidos");
                }
            }
        } catch (Exception e) {
        }
    }

    /**
     * Método que actualiza al usuario: Nombre, Apellido, Estado, Correo
     */
    private void actualizarUsuario() {
        RespuestaUsuario ru = new RespuestaUsuario();
        Usuario usuario = new Usuario();
        RespuestaUsuarioListar listaUsuario = new RespuestaUsuarioListar();
        listaUsuario = UsuarioController.buscarUsuario(txtIdUsuario.getText());
        usuario = listaUsuario.getUsuarios().get(0);
        String validaEstado = "";

        if (rbtNoVigente.isSelected()) {
            validaEstado = "false";
        } else {
            validaEstado = "true";
        }

        if (!usuario.getEstado().equals(validaEstado)) {
            int opcion = JOptionPane.showConfirmDialog(null, "Está seguro que desea guardar los cambios", "Datos de Usuario", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE);

            if (opcion == 0) {
                if (txtTelefonoUsuario.getText() != null
                        || txtDireccionUsuario.getText() != null
                        || txtEmailUsuario.getText() != null
                        || rbtNoVigente.getText() != null
                        || rbtVigente.getText() != null) {
                    usuario.setNombre(txtNombre.getText());
                    usuario.setApellido(txtApellido.getText());
                    usuario.setTelefono(txtTelefonoUsuario.getText());
                    usuario.setDireccion(txtDireccionUsuario.getText());
                    usuario.setEmail(txtEmailUsuario.getText());
                    usuario.setRut(ValidacionRut.quitarPuntos(txtRut.getText()));
                    usuario.setIdPerfil(String.valueOf(perfilUsuario.perfilUsuarioInt(txtTipoUsuario.getText())));
                    usuario.setFechaCreacion("2000-01-01T00:00:00");
                    usuario.setFechaModificacion("2000-01-01T00:00:00");
                    if (rbtVigente.isSelected()) {
                        usuario.setEstado("true");
                    }
                    if (rbtNoVigente.isSelected()) {
                        usuario.setEstado("false");
                    }
                    if (txtActivo.getText().equals("Si")) {
                        usuario.setActivo("true");
                    } else {
                        usuario.setActivo("false");
                    }
                    if (txtCambioClave.getText().equals("Si")) {
                        usuario.setCambiaClave("true");
                    } else {
                        usuario.setCambiaClave("false");
                    }
                }
                ru = UsuarioController.actualizarUsuario(usuario);
                if (ru.isExito()) {
                    TMUsuario modelo;
                    listaUsuario.getUsuarios().clear();
                    listaUsuario.getUsuarios().add(ru.getUsuario());
                    modelo = new TMUsuario(listaUsuario.getUsuarios());
                    tblGestionUsuarios.setModel(modelo);
                }
            }
        } else {
            JOptionPane.showMessageDialog(pnlInputsGestionUsuario, "No se realizarán cambios");
        }
    }

    /**
     * Métodos Listener para evitar ingreso erróneo de datos
     */
    private void listenerUsuario() {
        txtApellido.addKeyListener(new KeyListener() {
            public void keyTyped(KeyEvent e) {
                if (Character.isDigit(e.getKeyChar())) {
                    e.consume();
                }
            }

            public void keyReleased(KeyEvent e) {
                btnBuscarApellido.setEnabled(true);
                btnActualizarUsuario.setEnabled(true);
            }

            public void keyPressed(KeyEvent e) {
            }
        });

        txtNombre.addKeyListener(new KeyListener() {
            public void keyTyped(KeyEvent e) {
                if (Character.isDigit(e.getKeyChar())) {
                    e.consume();
                }
            }

            public void keyReleased(KeyEvent e) {
                btnBuscarNombre.setEnabled(true);
                btnActualizarUsuario.setEnabled(true);
            }

            public void keyPressed(KeyEvent e) {
            }
        });

        txtEmailUsuario.addKeyListener(new KeyListener() {
            public void keyTyped(KeyEvent e) {
                if (Character.isWhitespace(e.getKeyChar())) {
                    e.consume();
                }
            }

            public void keyReleased(KeyEvent e) {
                btnActualizarUsuario.setEnabled(true);
            }

            public void keyPressed(KeyEvent e) {
            }
        });

        txtRut.addKeyListener(new KeyListener() {
            public void keyTyped(KeyEvent e) {
                if (Character.isWhitespace(e.getKeyChar())) {
                    e.consume();
                }
            }

            public void keyReleased(KeyEvent e) {
                btnBuscarRut.setEnabled(true);
            }

            public void keyPressed(KeyEvent e) {
            }
        });

        rbtVigente.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnActualizarUsuario.setEnabled(true);
            }
        });

        rbtNoVigente.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnActualizarUsuario.setEnabled(true);
            }
        });

    }

}
